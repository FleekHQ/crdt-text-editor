// package: powergate.admin.v1
// file: powergate/admin/v1/admin.proto

import * as jspb from "google-protobuf";
import * as powergate_user_v1_user_pb from "../../../powergate/user/v1/user_pb";

export class NewAddressRequest extends jspb.Message {
  getAddressType(): string;
  setAddressType(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): NewAddressRequest.AsObject;
  static toObject(includeInstance: boolean, msg: NewAddressRequest): NewAddressRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: NewAddressRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): NewAddressRequest;
  static deserializeBinaryFromReader(message: NewAddressRequest, reader: jspb.BinaryReader): NewAddressRequest;
}

export namespace NewAddressRequest {
  export type AsObject = {
    addressType: string,
  }
}

export class NewAddressResponse extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): NewAddressResponse.AsObject;
  static toObject(includeInstance: boolean, msg: NewAddressResponse): NewAddressResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: NewAddressResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): NewAddressResponse;
  static deserializeBinaryFromReader(message: NewAddressResponse, reader: jspb.BinaryReader): NewAddressResponse;
}

export namespace NewAddressResponse {
  export type AsObject = {
    address: string,
  }
}

export class AddressesRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): AddressesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: AddressesRequest): AddressesRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: AddressesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): AddressesRequest;
  static deserializeBinaryFromReader(message: AddressesRequest, reader: jspb.BinaryReader): AddressesRequest;
}

export namespace AddressesRequest {
  export type AsObject = {
  }
}

export class AddressesResponse extends jspb.Message {
  clearAddressesList(): void;
  getAddressesList(): Array<string>;
  setAddressesList(value: Array<string>): void;
  addAddresses(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): AddressesResponse.AsObject;
  static toObject(includeInstance: boolean, msg: AddressesResponse): AddressesResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: AddressesResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): AddressesResponse;
  static deserializeBinaryFromReader(message: AddressesResponse, reader: jspb.BinaryReader): AddressesResponse;
}

export namespace AddressesResponse {
  export type AsObject = {
    addressesList: Array<string>,
  }
}

export class SendFilRequest extends jspb.Message {
  getFrom(): string;
  setFrom(value: string): void;

  getTo(): string;
  setTo(value: string): void;

  getAmount(): string;
  setAmount(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SendFilRequest.AsObject;
  static toObject(includeInstance: boolean, msg: SendFilRequest): SendFilRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: SendFilRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SendFilRequest;
  static deserializeBinaryFromReader(message: SendFilRequest, reader: jspb.BinaryReader): SendFilRequest;
}

export namespace SendFilRequest {
  export type AsObject = {
    from: string,
    to: string,
    amount: string,
  }
}

export class SendFilResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SendFilResponse.AsObject;
  static toObject(includeInstance: boolean, msg: SendFilResponse): SendFilResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: SendFilResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SendFilResponse;
  static deserializeBinaryFromReader(message: SendFilResponse, reader: jspb.BinaryReader): SendFilResponse;
}

export namespace SendFilResponse {
  export type AsObject = {
  }
}

export class User extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getToken(): string;
  setToken(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): User.AsObject;
  static toObject(includeInstance: boolean, msg: User): User.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: User, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): User;
  static deserializeBinaryFromReader(message: User, reader: jspb.BinaryReader): User;
}

export namespace User {
  export type AsObject = {
    id: string,
    token: string,
  }
}

export class CreateUserRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateUserRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateUserRequest): CreateUserRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateUserRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateUserRequest;
  static deserializeBinaryFromReader(message: CreateUserRequest, reader: jspb.BinaryReader): CreateUserRequest;
}

export namespace CreateUserRequest {
  export type AsObject = {
  }
}

export class CreateUserResponse extends jspb.Message {
  hasUser(): boolean;
  clearUser(): void;
  getUser(): User | undefined;
  setUser(value?: User): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateUserResponse.AsObject;
  static toObject(includeInstance: boolean, msg: CreateUserResponse): CreateUserResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateUserResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateUserResponse;
  static deserializeBinaryFromReader(message: CreateUserResponse, reader: jspb.BinaryReader): CreateUserResponse;
}

export namespace CreateUserResponse {
  export type AsObject = {
    user?: User.AsObject,
  }
}

export class UsersRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UsersRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UsersRequest): UsersRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UsersRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UsersRequest;
  static deserializeBinaryFromReader(message: UsersRequest, reader: jspb.BinaryReader): UsersRequest;
}

export namespace UsersRequest {
  export type AsObject = {
  }
}

export class UsersResponse extends jspb.Message {
  clearUsersList(): void;
  getUsersList(): Array<User>;
  setUsersList(value: Array<User>): void;
  addUsers(value?: User, index?: number): User;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UsersResponse.AsObject;
  static toObject(includeInstance: boolean, msg: UsersResponse): UsersResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UsersResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UsersResponse;
  static deserializeBinaryFromReader(message: UsersResponse, reader: jspb.BinaryReader): UsersResponse;
}

export namespace UsersResponse {
  export type AsObject = {
    usersList: Array<User.AsObject>,
  }
}

export class QueuedStorageJobsRequest extends jspb.Message {
  getUserId(): string;
  setUserId(value: string): void;

  clearCidsList(): void;
  getCidsList(): Array<string>;
  setCidsList(value: Array<string>): void;
  addCids(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueuedStorageJobsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueuedStorageJobsRequest): QueuedStorageJobsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueuedStorageJobsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueuedStorageJobsRequest;
  static deserializeBinaryFromReader(message: QueuedStorageJobsRequest, reader: jspb.BinaryReader): QueuedStorageJobsRequest;
}

export namespace QueuedStorageJobsRequest {
  export type AsObject = {
    userId: string,
    cidsList: Array<string>,
  }
}

export class QueuedStorageJobsResponse extends jspb.Message {
  clearStorageJobsList(): void;
  getStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueuedStorageJobsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueuedStorageJobsResponse): QueuedStorageJobsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueuedStorageJobsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueuedStorageJobsResponse;
  static deserializeBinaryFromReader(message: QueuedStorageJobsResponse, reader: jspb.BinaryReader): QueuedStorageJobsResponse;
}

export namespace QueuedStorageJobsResponse {
  export type AsObject = {
    storageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
  }
}

export class ExecutingStorageJobsRequest extends jspb.Message {
  getUserId(): string;
  setUserId(value: string): void;

  clearCidsList(): void;
  getCidsList(): Array<string>;
  setCidsList(value: Array<string>): void;
  addCids(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ExecutingStorageJobsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ExecutingStorageJobsRequest): ExecutingStorageJobsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ExecutingStorageJobsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ExecutingStorageJobsRequest;
  static deserializeBinaryFromReader(message: ExecutingStorageJobsRequest, reader: jspb.BinaryReader): ExecutingStorageJobsRequest;
}

export namespace ExecutingStorageJobsRequest {
  export type AsObject = {
    userId: string,
    cidsList: Array<string>,
  }
}

export class ExecutingStorageJobsResponse extends jspb.Message {
  clearStorageJobsList(): void;
  getStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ExecutingStorageJobsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ExecutingStorageJobsResponse): ExecutingStorageJobsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ExecutingStorageJobsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ExecutingStorageJobsResponse;
  static deserializeBinaryFromReader(message: ExecutingStorageJobsResponse, reader: jspb.BinaryReader): ExecutingStorageJobsResponse;
}

export namespace ExecutingStorageJobsResponse {
  export type AsObject = {
    storageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
  }
}

export class LatestFinalStorageJobsRequest extends jspb.Message {
  getUserId(): string;
  setUserId(value: string): void;

  clearCidsList(): void;
  getCidsList(): Array<string>;
  setCidsList(value: Array<string>): void;
  addCids(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): LatestFinalStorageJobsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: LatestFinalStorageJobsRequest): LatestFinalStorageJobsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: LatestFinalStorageJobsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): LatestFinalStorageJobsRequest;
  static deserializeBinaryFromReader(message: LatestFinalStorageJobsRequest, reader: jspb.BinaryReader): LatestFinalStorageJobsRequest;
}

export namespace LatestFinalStorageJobsRequest {
  export type AsObject = {
    userId: string,
    cidsList: Array<string>,
  }
}

export class LatestFinalStorageJobsResponse extends jspb.Message {
  clearStorageJobsList(): void;
  getStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): LatestFinalStorageJobsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: LatestFinalStorageJobsResponse): LatestFinalStorageJobsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: LatestFinalStorageJobsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): LatestFinalStorageJobsResponse;
  static deserializeBinaryFromReader(message: LatestFinalStorageJobsResponse, reader: jspb.BinaryReader): LatestFinalStorageJobsResponse;
}

export namespace LatestFinalStorageJobsResponse {
  export type AsObject = {
    storageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
  }
}

export class LatestSuccessfulStorageJobsRequest extends jspb.Message {
  getUserId(): string;
  setUserId(value: string): void;

  clearCidsList(): void;
  getCidsList(): Array<string>;
  setCidsList(value: Array<string>): void;
  addCids(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): LatestSuccessfulStorageJobsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: LatestSuccessfulStorageJobsRequest): LatestSuccessfulStorageJobsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: LatestSuccessfulStorageJobsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): LatestSuccessfulStorageJobsRequest;
  static deserializeBinaryFromReader(message: LatestSuccessfulStorageJobsRequest, reader: jspb.BinaryReader): LatestSuccessfulStorageJobsRequest;
}

export namespace LatestSuccessfulStorageJobsRequest {
  export type AsObject = {
    userId: string,
    cidsList: Array<string>,
  }
}

export class LatestSuccessfulStorageJobsResponse extends jspb.Message {
  clearStorageJobsList(): void;
  getStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): LatestSuccessfulStorageJobsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: LatestSuccessfulStorageJobsResponse): LatestSuccessfulStorageJobsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: LatestSuccessfulStorageJobsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): LatestSuccessfulStorageJobsResponse;
  static deserializeBinaryFromReader(message: LatestSuccessfulStorageJobsResponse, reader: jspb.BinaryReader): LatestSuccessfulStorageJobsResponse;
}

export namespace LatestSuccessfulStorageJobsResponse {
  export type AsObject = {
    storageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
  }
}

export class StorageJobsSummaryRequest extends jspb.Message {
  getUserId(): string;
  setUserId(value: string): void;

  clearCidsList(): void;
  getCidsList(): Array<string>;
  setCidsList(value: Array<string>): void;
  addCids(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): StorageJobsSummaryRequest.AsObject;
  static toObject(includeInstance: boolean, msg: StorageJobsSummaryRequest): StorageJobsSummaryRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: StorageJobsSummaryRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): StorageJobsSummaryRequest;
  static deserializeBinaryFromReader(message: StorageJobsSummaryRequest, reader: jspb.BinaryReader): StorageJobsSummaryRequest;
}

export namespace StorageJobsSummaryRequest {
  export type AsObject = {
    userId: string,
    cidsList: Array<string>,
  }
}

export class StorageJobsSummaryResponse extends jspb.Message {
  hasJobCounts(): boolean;
  clearJobCounts(): void;
  getJobCounts(): powergate_user_v1_user_pb.JobCounts | undefined;
  setJobCounts(value?: powergate_user_v1_user_pb.JobCounts): void;

  clearQueuedStorageJobsList(): void;
  getQueuedStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setQueuedStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addQueuedStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  clearExecutingStorageJobsList(): void;
  getExecutingStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setExecutingStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addExecutingStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  clearLatestFinalStorageJobsList(): void;
  getLatestFinalStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setLatestFinalStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addLatestFinalStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  clearLatestSuccessfulStorageJobsList(): void;
  getLatestSuccessfulStorageJobsList(): Array<powergate_user_v1_user_pb.StorageJob>;
  setLatestSuccessfulStorageJobsList(value: Array<powergate_user_v1_user_pb.StorageJob>): void;
  addLatestSuccessfulStorageJobs(value?: powergate_user_v1_user_pb.StorageJob, index?: number): powergate_user_v1_user_pb.StorageJob;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): StorageJobsSummaryResponse.AsObject;
  static toObject(includeInstance: boolean, msg: StorageJobsSummaryResponse): StorageJobsSummaryResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: StorageJobsSummaryResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): StorageJobsSummaryResponse;
  static deserializeBinaryFromReader(message: StorageJobsSummaryResponse, reader: jspb.BinaryReader): StorageJobsSummaryResponse;
}

export namespace StorageJobsSummaryResponse {
  export type AsObject = {
    jobCounts?: powergate_user_v1_user_pb.JobCounts.AsObject,
    queuedStorageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
    executingStorageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
    latestFinalStorageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
    latestSuccessfulStorageJobsList: Array<powergate_user_v1_user_pb.StorageJob.AsObject>,
  }
}

