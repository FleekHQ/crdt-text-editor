// package: powergate.admin.v1
// file: powergate/admin/v1/admin.proto

import * as powergate_admin_v1_admin_pb from "../../../powergate/admin/v1/admin_pb";
import {grpc} from "@improbable-eng/grpc-web";

type AdminServiceNewAddress = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.NewAddressRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.NewAddressResponse;
};

type AdminServiceAddresses = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.AddressesRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.AddressesResponse;
};

type AdminServiceSendFil = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.SendFilRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.SendFilResponse;
};

type AdminServiceCreateUser = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.CreateUserRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.CreateUserResponse;
};

type AdminServiceUsers = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.UsersRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.UsersResponse;
};

type AdminServiceQueuedStorageJobs = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.QueuedStorageJobsRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.QueuedStorageJobsResponse;
};

type AdminServiceExecutingStorageJobs = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.ExecutingStorageJobsRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.ExecutingStorageJobsResponse;
};

type AdminServiceLatestFinalStorageJobs = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.LatestFinalStorageJobsRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.LatestFinalStorageJobsResponse;
};

type AdminServiceLatestSuccessfulStorageJobs = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsResponse;
};

type AdminServiceStorageJobsSummary = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof powergate_admin_v1_admin_pb.StorageJobsSummaryRequest;
  readonly responseType: typeof powergate_admin_v1_admin_pb.StorageJobsSummaryResponse;
};

export class AdminService {
  static readonly serviceName: string;
  static readonly NewAddress: AdminServiceNewAddress;
  static readonly Addresses: AdminServiceAddresses;
  static readonly SendFil: AdminServiceSendFil;
  static readonly CreateUser: AdminServiceCreateUser;
  static readonly Users: AdminServiceUsers;
  static readonly QueuedStorageJobs: AdminServiceQueuedStorageJobs;
  static readonly ExecutingStorageJobs: AdminServiceExecutingStorageJobs;
  static readonly LatestFinalStorageJobs: AdminServiceLatestFinalStorageJobs;
  static readonly LatestSuccessfulStorageJobs: AdminServiceLatestSuccessfulStorageJobs;
  static readonly StorageJobsSummary: AdminServiceStorageJobsSummary;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class AdminServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  newAddress(
    requestMessage: powergate_admin_v1_admin_pb.NewAddressRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.NewAddressResponse|null) => void
  ): UnaryResponse;
  newAddress(
    requestMessage: powergate_admin_v1_admin_pb.NewAddressRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.NewAddressResponse|null) => void
  ): UnaryResponse;
  addresses(
    requestMessage: powergate_admin_v1_admin_pb.AddressesRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.AddressesResponse|null) => void
  ): UnaryResponse;
  addresses(
    requestMessage: powergate_admin_v1_admin_pb.AddressesRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.AddressesResponse|null) => void
  ): UnaryResponse;
  sendFil(
    requestMessage: powergate_admin_v1_admin_pb.SendFilRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.SendFilResponse|null) => void
  ): UnaryResponse;
  sendFil(
    requestMessage: powergate_admin_v1_admin_pb.SendFilRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.SendFilResponse|null) => void
  ): UnaryResponse;
  createUser(
    requestMessage: powergate_admin_v1_admin_pb.CreateUserRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.CreateUserResponse|null) => void
  ): UnaryResponse;
  createUser(
    requestMessage: powergate_admin_v1_admin_pb.CreateUserRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.CreateUserResponse|null) => void
  ): UnaryResponse;
  users(
    requestMessage: powergate_admin_v1_admin_pb.UsersRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.UsersResponse|null) => void
  ): UnaryResponse;
  users(
    requestMessage: powergate_admin_v1_admin_pb.UsersRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.UsersResponse|null) => void
  ): UnaryResponse;
  queuedStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.QueuedStorageJobsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.QueuedStorageJobsResponse|null) => void
  ): UnaryResponse;
  queuedStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.QueuedStorageJobsRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.QueuedStorageJobsResponse|null) => void
  ): UnaryResponse;
  executingStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.ExecutingStorageJobsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.ExecutingStorageJobsResponse|null) => void
  ): UnaryResponse;
  executingStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.ExecutingStorageJobsRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.ExecutingStorageJobsResponse|null) => void
  ): UnaryResponse;
  latestFinalStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.LatestFinalStorageJobsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.LatestFinalStorageJobsResponse|null) => void
  ): UnaryResponse;
  latestFinalStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.LatestFinalStorageJobsRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.LatestFinalStorageJobsResponse|null) => void
  ): UnaryResponse;
  latestSuccessfulStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsResponse|null) => void
  ): UnaryResponse;
  latestSuccessfulStorageJobs(
    requestMessage: powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.LatestSuccessfulStorageJobsResponse|null) => void
  ): UnaryResponse;
  storageJobsSummary(
    requestMessage: powergate_admin_v1_admin_pb.StorageJobsSummaryRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.StorageJobsSummaryResponse|null) => void
  ): UnaryResponse;
  storageJobsSummary(
    requestMessage: powergate_admin_v1_admin_pb.StorageJobsSummaryRequest,
    callback: (error: ServiceError|null, responseMessage: powergate_admin_v1_admin_pb.StorageJobsSummaryResponse|null) => void
  ): UnaryResponse;
}

